<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="memberMapper">

	<!-- 2.resultMap을 만들자 -->
	<resultMap type="Member" id="memberResultSet">
		<!-- property : 자바의 필드 변수 이름/ colum : DB의 해당 컬럼명 -->
		
		<!-- DB의 기본키(primary key) -->
		<id property="mid" column="USER_NO"/>
		
		<!-- DB의 일반 컬럼들 -->
	    <result property="userId" column="USER_ID"/>
	    <result property="userPwd" column="USER_PWD"/>
	    <result property="userName" column="USER_NAME"/>
	    <result property="phone" column="PHONE"/>
	    <result property="email" column="EMAIL"/>
	    <result property="address" column="ADDRESS"/>
	    <result property="interest" column="INTEREST"/>
	    <result property="enrollDate" column="ENROLL DATE"/>
	    <result property="updateDate" column="MODIFY DATE"/>
	    <result property="mStatus" column="STATUS"/>
	</resultMap>
	
	
	<!-- 1. 로그인 관련 select구문(하나만 가져오는 select) -->
	<!-- vo 클래스(Member)의 멤버 변수가 DB 테이블의 컬럼과 같다면 -->
	<select id="test" parameterType="member.model.vo.Member" resultType="Member">
		<!-- id : 외부(DAO)에서 참조하기 위한 쿼리문의 고유아이디(쿼리문=id로 생각하자)
			 parameterType : 내부로 받을 객체의 자료형(mybatis-config.xml에 등록한 별칭(alias)을 사용할 수 있음)
			 resultType/resultMap : 쿼리 실행 후 조회된 결과(ResultSet)를 자바의 객체에서 사용하게끔 하는 용도(담을 자바의 객체) -->
			 
		SELECT *
		FROM MEMBER
		WHERE USER_ID = #{userId}
			  AND USER_PWD = #{userPwd}
	</select>		 
	
	<!-- 위와 같은 경우를 쓸 때는 ResultSet의 결과인 컬럼명이 받아줄 자바 객체의 멤버변수과 일치하면 자동으로 mapping되어 자바 객체로 리턴한다
	
		 하지만 우리의 vo클래스인 Member는 멤버 변수가 ResultSet의 컬럼명과 다르다 그러므로 resultMap 태그를 사용해서 mapping작업을 해주자
		  -->
	
	
	
	<!-- vo 클래스(Member)의 멤버 변수가 DB 테이블의 컬럼과 다르다면 -->
	<select id="loginMember" parameterType="Member" resultMap="memberResultSet">
		SELECT *
		FROM MEMBER
		WHERE USER_ID = #{userId}
			  AND USER_PWD = #{userPwd}	
	</select>
	
	<!-- 다시 MemberDao로 돌아가자 -->
		
		
	
  
</mapper>
